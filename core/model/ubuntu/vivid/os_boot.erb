#!/bin/bash

cat <<EOF >/root/os_boot.log
Postinstall os_boot script log
==============================
Hanlon settings:
    Model <%= @label %> - <%= @description %>
    Image UUID <%= @image_uuid %>
    Node UUID: <%= @node.uuid %>
    Script: $0
=============================

EOF

function send_status() {
  status=$?
  step=$1

  [ "$status" -eq 0 ] && curl <%= callback_url("postinstall", "${step}_ok") %> || curl <%= callback_url("postinstall", "${step}_fail") %>
}

exec >> /root/os_boot.log
exec 2>&1
set -x

hostname <%= hostname %>
echo <%= hostname %> > /etc/hostname
sleep 15

# this set of commands should convert the first local (but non-loopback) IP
# address in the /etc/hosts file to an entry that has the fully-qualified
# hostname and local hostname as part of the entry (so that tehse names can
# be resolved properly).  A backup of the original file will be left in place
# in the /etc/hosts- file
cp -p /etc/hosts /etc/hosts-
grep '^127\.0\.0\.1.*' /etc/hosts- > /etc/hosts
grep -v '^127\.0\.0\.1.*' /etc/hosts- | grep '^127\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}.*' | head -1 | sed 's/^\(127\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\)\([[:blank:]]\{1,\}\)\(.*\)$/\1\2'<%= hostname %>.<%= domainname %>'\2'<%= hostname %>'/' >> /etc/hosts
grep -v '^127\.0\.0\.1.*' /etc/hosts- | grep '^127\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}.*' | tail -n +2 >> /etc/hosts
grep -v '^127\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}.*' /etc/hosts- >> /etc/hosts

send_status "set_hostname"

sed -i 's_<%= config.hanlon_server %>:<%= config.api_port %><%= config.websvc_root %>/image/os/<%= @image_uuid %>_archive.ubuntu.com/ubuntu_g' /etc/apt/sources.list && curl <%= callback_url("postinstall", "sources_fix") %>
apt-get -y update
send_status "apt_update"

apt-get -y upgrade
send_status "apt_upgrade"

sed -i 's/^#\?\s*PermitRootLogin .*$/PermitRootLogin yes/' /etc/ssh/sshd_config && systemctl restart ssh
send_status "ssh_root_access"

# Get current IP
default_gw_device=`route | grep default | awk '{print $8}'`
node_ip=`ifconfig $default_gw_device | grep -w inet | awk -F: '{print $2}' | awk '{print $1}'`

# Send IP up
curl <%= callback_url("postinstall", "send_ips") %>/$node_ip

# get final script
curl <%= callback_url("postinstall", "boot") %> | sh
send_status "final_script"

# Send final state
curl <%= callback_url("postinstall", "final") %> &
