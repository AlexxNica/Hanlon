#!/bin/bash

hostname <%= hostname %>
echo <%= hostname %> > /etc/hostname
# this pair of 'sed' expressions should cover all of the possible 127.x.x.x
# cases that could be used for a non-localhost entry in the /etc/hosts file
# while still skipping the "localhost" loopback entry (which should always be
# given a 127.0.0.1 address)
sed -i 's/^\(127\.[0-9]\{1,3\}\.[1-9]\{1,3\}\.[1-9]\{1,3\}\)\([[:blank:]]\{1,\}\)\(.*\)$/\1\2'<%= hostname %>.<%= domainname %>'\2'<%= hostname %>'/' /etc/hosts
sed -i 's/^\(127\.[1-9]\{1,3\}\.[0-9]\{1,3\}\.[1-9]\{1,3\}\)\([[:blank:]]\{1,\}\)\(.*\)$/\1\2'<%= hostname %>.<%= domainname %>'\2'<%= hostname %>'/' /etc/hosts
[ "$?" -eq 0 ] && curl <%= callback_url("postinstall", "set_hostname_ok") %> || curl <%= callback_url("postinstall", "set_hostname_fail") %>

sed -i 's_<%= config.image_svc_host %>:<%= config.image_svc_port %>/razor/image/os/<%= @image_uuid %>_archive.ubuntu.com/ubuntu_g' /etc/apt/sources.list && curl <%= callback_url("postinstall", "sources_fix") %>
apt-get -y update
[ "$?" -eq 0 ] && curl <%= callback_url("postinstall", "apt_update_ok") %> || curl <%= callback_url("postinstall", "apt_update_fail") %>

apt-get -y upgrade
[ "$?" -eq 0 ] && curl <%= callback_url("postinstall", "apt_upgrade_ok") %> || curl <%= callback_url("postinstall", "apt_upgrade_fail") %>

apt-get -y install rubygems facter
[ "$?" -eq 0 ] && curl <%= callback_url("postinstall", "apt_install_ok") %> || curl <%= callback_url("postinstall", "apt_install_fail") %>

# Get current IP
node_ip=`facter ipaddress`
# Send IP up
curl <%= callback_url("postinstall", "send_ips") %>/$node_ip
# get final script
curl <%= callback_url("postinstall", "boot") %> | sh
